
@using BusinessExcel.Models
@using BusinessExcel.Controllers
@using BootstrapHtmlHelper
@using BusinessExcel.Providers.ProviderContext
@using BusinessExcel.Providers.ProviderContext.Entities
@using BusinessExcel.Controllers.JSON

@model TargetAchievementView




<!-- Content Header (Page header) -->
<section class="content-header month">
    <h4>
        @Model.Month

    </h4>
    @*<ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> @BusinessExcel.Controllers.RosterController.ROSTERCONTROLLER</a></li>
            <li class="active">@BusinessExcel.Controllers.RosterController.RosterActions_TITLE</li>
        </ol>*@
</section>




<div class="box box-primary">

    <div class="box-body">

        <div id="target-achievement-view" class="table-responsive">
            @{
                if (User.IsInRole("User"))
                {


                    using (var db = new SalesManageDataContext())
                    {
                        WebGridColumn col = new WebGridColumn()
                        {

                        };

                        int count = 0;
                        IQueryable<TargetAchievementView> data = db.TargetAchievementViewPaging(pageNumber: ViewBag.UserTargetViewPage,
                                    pageSize: 6,
                                    sort: ViewBag.UserTargetViewSort,
                                    sortdir: ViewBag.UserTargetViewDir,
                                    count: out count, Filters: Model
                                    );

                        var grid = new WebGrid(ajaxUpdateContainerId: "target-achievement-view",
                                            ajaxUpdateCallback: "targetachievementviewcallBack",
                                            rowsPerPage: 6
                                            );
                        grid.Bind(source: data, autoSortAndPage: false, rowCount: count);
                    @grid.GetHtml(
                                             tableStyle: "table table-striped table-bordered be-pagination-spl",
                                             //headerStyle: "webgrid-header",
                                             alternatingRowStyle: "webgrid-alternating-row",
                                             selectedRowStyle: "webgrid-selected-row",
                                             rowStyle: "webgrid-row-style",
                                             htmlAttributes: new { @id = "Tsheet" + Model.Month },
                                             columns: new[] {
                       grid.Column(
                           columnName: "Category",
                           header: "Category",
                           format: null,
                           style: "Category",
                           canSort: false),
                       grid.Column(
                           columnName: "has_bonus",
                           header: "Bonus Line",
                           format: @<text>@(item.has_bonus ? "1" : "0" )</text>, style: "Category", canSort: false),
                       grid.Column(
                           columnName: "Target_amt",
                           header: "Target",
                           format: (item)=>@Html.AdminLTEParagraph((object)@item["Target_amt"], new Dictionary<string, object> { { "class", "numaric" } }),
                           style: "Target_amt numaric", canSort: false),
                       grid.Column(
                           columnName: "Achieved_Amt",
                           header: "Achieved",
                           format: null, style: "Achieved_Amt numaric", canSort: false),

                         grid.Column(
                           columnName: "Entered_Amt",
                           header: "Entered",
                           format: null, style: "Entered_Amt numaric", canSort: false),

                       grid.Column(
                           null,
                           null,
                           format:@<input type="hidden" name="Base_Incentive" class="hid_Base_Incentive" value="@(String.Format("{0:n}",item.Base_Incentive))" />),
                                             }
                                             //footerStyle: "extra-table-pager"
                                             )

                    }
                }
                else
                {
                    using (var db = new SalesManageDataContext())
                    {
                        WebGridColumn col = new WebGridColumn()
                        {

                        };

                        int count = 0;
                        IQueryable<TargetAchievementView> data = db.TargetAchievementViewPaging(pageNumber: ViewBag.UserTargetViewPage,
                                    pageSize: 6,
                                    sort: ViewBag.UserTargetViewSort,
                                    sortdir: ViewBag.UserTargetViewDir,
                                    count: out count, Filters: Model
                                    );

                        var grid = new WebGrid(ajaxUpdateContainerId: "target-achievement-view",
                                            ajaxUpdateCallback: "targetachievementviewcallBack",
                                            rowsPerPage: 6
                                            );
                        grid.Bind(source: data, autoSortAndPage: false, rowCount: count);
                        @grid.GetHtml(
                                         tableStyle: "table table-striped table-bordered be-pagination-spl",
                                         //headerStyle: "webgrid-header",
                                         alternatingRowStyle: "webgrid-alternating-row",
                                         selectedRowStyle: "webgrid-selected-row",
                                         rowStyle: "webgrid-row-style",
                                         htmlAttributes: new { @id = "Tsheet" + Model.Month },
                                         columns: new[] {
                       grid.Column(
                           columnName: "Category",
                           header: "Category",
                           format: null,
                           style: "Category",
                           canSort: false),
                       grid.Column(
                           columnName: "has_bonus",
                           header: "Bonus Line",
                           format: @<text>@(item.has_bonus ? "1" : "0" )</text>, style: "Category ", canSort: false),
                       grid.Column(
                           columnName: "Target_amt",
                           header: "Target",
                           format: (item)=>@Html.AdminLTEParagraph((object)@item["Target_amt"], new Dictionary<string, object> { { "class", "numaric" } }),
                           style: "Target_amt numaric", canSort: false),
                       grid.Column(
                           columnName: "Achieved_Amt",
                           header: "Achieved",
                           format: (item)=>@Html.AdminLTEParagraph((object)@item["Achieved_Amt"], new Dictionary<string, object> { { "class", "numaric" } }),
                           style: "Achieved_Amt numaric", canSort: false),

                         @*grid.Column("Entered_Amt", "Entered_Amt", format: @<text> <span class="display-mode"> <label id="lblEntered_Amt">@item.Entered_Amt</label> </span>  <input type="text" id="Entered_Amt" value="@item.Entered_Amt" class="edit-mode" /> </text>, style: "Entered_Amt numaric"),*@

                       grid.Column("Entered_Amt", "Entered Amt", format: @<text> <span class="display-mode"> <label id="lblEntered_Amt">@item.Entered_Amt</label> </span>  <input type="text" id="Entered_Amt" value="@item.Entered_Amt" class="edit-mode" /> </text>, style: "Entered_Amt numaric"),


                          grid.Column("", format: @<text>

                <button class="edit-amt display-mode">Edit</button>

                <button class="save-amt edit-mode">Save</button>

                <button class="cancel-amt edit-mode">Cancel</button>

                        </text>,  style: "col3Width" , canSort: false),


                       grid.Column(
                           null,
                           null,
                           format:@<input type="hidden" name="Base_Incentive" class="hid_Base_Incentive_@Model.Month" value="@(String.Format("{0:n}",item.Base_Incentive))" />),

                       grid.Column(
                           null,
                           null,
                           format:@<input type="hidden" name="user_id" id="hid_user_id" value="@item.user_id" />),

                           grid.Column(
                           null,
                           null,
                           format:@<input type="hidden" name="category_id" id="hid_category_id" value="@item.category_id" />),


  grid.Column(null, null, format: @<input type="hidden" name="target_id" id="hid_target_id" value="@item.target_id" />),



                                         }
                                         //footerStyle: "extra-table-pager"
                                         )
        }
    }



}
        </div>



    </div>
    <div class="container-fluid">
        <div id="totalvaluerow">
            <div class="row">
                <div class="col-md-4">


                    <div class="input-group">

                        <input type="text" class="form-control extrainfo" value="Base Incentive" />
                        <span class="input-group-addon extrainfo"></span>
                        <input type="text" class="form-control extrainfo" value="" id="base_incentive_@Model.Month" />

                    </div>


                </div>
            </div>
            <hr class="col-md-12" size="20" style="margin:2px;border-top:0">
            <div class="row">
                <div class="col-md-4">


                    <div class="input-group">
                        <input type="text" class="form-control extrainfo" value="Target %" />
                        <span class="input-group-addon extrainfo"></span>
                        <input type="text" class="form-control extrainfo" value="0.00" />
                        <span class="input-group-addon extrainfo"></span>
                        <input type="text" class="form-control extrainfo" value="0.00" />
                    </div>


                </div>
                <div class="col-md-4">


                    <div class="input-group">
                        <input type="text" class="form-control extrainfo" value="Line Achv %" />
                        <span class="input-group-addon extrainfo"></span>
                        <input type="text" class="form-control extrainfo" value="0.00" />
                        <span class="input-group-addon extrainfo"></span>
                        <input type="text" class="form-control extrainfo" value="0.00" />
                    </div>


                </div>

                <div class="col-md-4">


                    <div class="input-group">
                        <input type="text" class="form-control extrainfo" value="Bonus Lines" />
                        <span class="input-group-addon extrainfo"></span>
                        <input type="text" class="form-control extrainfo" value="0.00" />
                        <span class="input-group-addon extrainfo"></span>
                        <input type="text" class="form-control extrainfo" value="0.00" />
                    </div>


                </div>
            </div>
        </div>
    </div>
</div>




<style>
    .totControls {
        width: 40%;
    }

    .input-group-addon {
        padding: 0;
        border: 0;
        width: 0;
    }

    #totalvaluerow {
        margin-bottom: .5%;
        margin-top: 2%;
    }

    .month {
        padding: 0px;
    }

    .box {
        margin-bottom: 0px;
    }

    .extrainfo {
        /*font-weight:bold;*/
        background-color: #5c6a73;
        color: white;
    }


    .webgrid-table {
        font-family: Arial,Helvetica,sans-serif;
        font-size: 14px;
        font-weight: normal;
        width: 650px;
        display: table;
        border-collapse: collapse;
        border: solid 1px #C5C5C5;
        background-color: white;
    }

        .webgrid-table td, th {
            border: 1px solid #C5C5C5;
            padding: 3px 7px 2px;
        }

    .webgrid-header, .webgrid-header a {
        background-color: #375d7d;
        color: #ffffff;
        text-align: right;
        text-decoration: none;
    }

    .webgrid-footer {
    }

    .webgrid-row-style {
        padding: 3px 7px 2px;
    }

    .webgrid-alternating-row {
        background-color: white;
        padding: 3px 7px 2px;
    }

    .col1Width {
        width: 55px;
    }

    .col2Width {
        width: 220px;
    }

    th:nth-child(n+2) {
       text-align:right
    }
    
    td:nth-child(n+7), th:nth-child(n+7) {
        display: none;
    }



  
</style>

<script>


    var month = '@Html.Raw(Model.Month)';

    $('.edit-mode').hide();
   // $('.edit-mode' + '_' + month).hide();
   // $('.save-amt' + '_' + month).hide();



    //$(document).on('click', ".edit-amt", function (event) {


    //    event.stopPropagation();
    //    event.preventDefault();
    //    event.stopImmediatePropagation();
    
    //    var tr = $(this).parents('tr:first');

    //    tr.find('.edit-mode', '.display-mode').toggle();

    //});

    $(function (event) {
       //var Qmonth = '@Html.Raw(Model.Month)';
       
      
        $('.edit-mode').hide();
        $('.edit-amt, .cancel-amt').on('click', function (event) {

            event.stopPropagation();
            event.preventDefault();
            event.stopImmediatePropagation();
            var tr = $(this).parents('tr:first');
            tr.find('.edit-mode, .display-mode').toggle();
        });

        $('.save-amt').on('click', function (event) {
            event.stopPropagation();
            event.preventDefault();
            event.stopImmediatePropagation();
          
            var tr = $(this).parents('tr:first');
            var ent_amt = tr.find("#Entered_Amt").val();
            var cat_id = tr.find("#hid_category_id").val();
            var user_id = tr.find("#hid_user_id").val();
            var target_id = tr.find("#hid_target_id").val();

          
           
           
            var targetModel =
            {
                "user_id": user_id,
                "category_id": cat_id,
                "target_id": target_id,
                "Entered_Amt": ent_amt
            };
            $.ajax({
                url: '@Url.Action(BusinessExcel.Controllers.ReportController.USER_TARGET_UPDATE_ACHIEVEMENT)',
                data: JSON.stringify(targetModel),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {

                    if(data == 1)
                    {
                        tr.find("#lblEntered_Amt").text(numberWithCommas(ent_amt));
                        tr.find('.edit-mode, .display-mode').toggle();
                        alert('Updated successfully');
                    }
                    else {
                        alert('Error occured');
                    }
                }
            });

        });
    })

</script>