

@using BusinessExcel.Models
@using BusinessExcel.Controllers
@using BootstrapHtmlHelper
@using BusinessExcel.Providers.ProviderContext
@using BusinessExcel.Providers.ProviderContext.Entities
@using BusinessExcel.Controllers.JSON

@model ActionViewFilters

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        @BusinessExcel.Controllers.ReportController.TARGETACHIEVEMENT_ACTIONS_TITLE 
        <small>Report</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> @BusinessExcel.Controllers.ReportController.REPORTCONTROLLER</a></li>
        <li class="active">@BusinessExcel.Controllers.ReportController.TARGETACHIEVEMENT_ACTIONS_TITLE</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Your Page Content Here -->
    @using (Ajax.BeginForm(ReportController.TARGETACHIEVEMENTACTIONS,
                                        ReportController.REPORTCONTROLLER,
                                        new AjaxOptions()
                                        {
                                            HttpMethod = "Get",
                                            UpdateTargetId = "main-body",
                                            OnBegin = "move('#page-load')",
                                            OnComplete = "ajax_call_load_complete('#page-load')",
                                            OnFailure = "loadin_failed"
                                        }))

    {
        <!-- Your Page Content Here -->
        <div class="box box-default collapsed-box">
            <div class="box-header with-border">
                <h3 class="box-title">Filters</h3>
                <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
                </div><!-- /.box-tools -->
            </div><!-- /.box-header -->
            <div class="box-body">
                <div class="row">
                    @Html.AntiForgeryToken()
                    
                   

                    <div class="col-md-3">

                        @Html.AdminLTEDropDownListFor(
                            m => m.UserName,
                            htmlLabelAttributes: null,
                            htmlDropDownAttributes: new Dictionary<string, object>() {
                                                                    { "class", "form-control select2" }
                            },
                            htmlGroupAttributes: null,
                            autoCompleteOptions: new AutoCompleteOptions()
                            {
                                AjaxOptions = new AjaxOptions()
                                {
                                    HttpMethod = "GET",
                                    Url = Url.Action(actionName: JSONController.USERAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
                                },
                                DescriptionField = "full_name",
                                IDField = "user_name",
                                Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
                                SelectedItem = ViewData[ReportController.SELECTED_FILTED_USER],
                                IsAutoComplete = true,
                                SelectItems = null
                            },
                            showLabel: true)

                    </div>
              

                    <div class="col-md-3">

                        @Html.AdminLTEDropDownListFor(
                            m => m.Location,
                            htmlLabelAttributes: null,
                            htmlDropDownAttributes: new Dictionary<string, object>() {
                                                                    { "class", "form-control select2" }
                            },
                            htmlGroupAttributes: null,
                            autoCompleteOptions: new AutoCompleteOptions()
                            {
                                AjaxOptions = new AjaxOptions()
                                {
                                    HttpMethod = "GET",
                                    Url = Url.Action(actionName: JSONController.LOCATIONAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
                                },
                                DescriptionField = "description",
                                IDField = "location_id",
                                Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
                                SelectedItem = ViewData[ReportController.SELECTED_FILTED_LOCATION],
                                IsAutoComplete = true,
                                SelectItems = null
                            },
                            showLabel: true)


                    </div>
                    <div class="col-md-4">

                        @Html.AdminLTEDateRangePickerFor(
                       m => m.StartDate,
                       m => m.EndDate,
                       "Date Range",
                       htmlLabelAttributes: null,
                       htmlTextBoxAttributes: new Dictionary<string, object>() { { "class", "form-control" }, { "autocomplete", "off" } },
                       htmlGroupAttributes: null,
                       htmlGlyphiconsAttributes: null,
                       glyphiconsName: "fa fa-calendar",
                       showLabel: true,
                       hasValidation: true,
                       showGlyphicons: true)
                    </div>
                </div>
            </div>            <!-- /.box-body -->
            <div class="box-footer">
                <div class="row">
                    <div class="col-md-2">

                        <input type="submit" value="Filter" class="btn btn-primary" />
                    </div>
                    <div class="col-md-offset-8">

                        @Html.AdminLTEActionLink(
                   linkText: BusinessExcel.Controllers.ReportController.EXPORTEXCEL_TITLE,
                   actionName: BusinessExcel.Controllers.ReportController.EXPORTEXCEL_TARGETACHIEVEMENT,
                   controllerName: BusinessExcel.Controllers.ReportController.REPORTCONTROLLER,
                   cssClass: "btn btn-link", routeValues: Model,
                   carrot: "fa fa-download")
                    </div>
                </div>
            </div>
        </div><!-- /.box -->
    }
    <div class="box box-primary">
        @*<div class="box-header with-border">
            <h3 class="box-title">Merchant Actions</h3>
        </div>*@
        <div class="box-body">

            <div id="table-daily-upate-view" class="table-responsive">
                @{

                    using (var db = new SalesManageDataContext())
                    {
                        WebGridColumn col = new WebGridColumn()
                        {

                        };

                        int count = 0;
                        IQueryable<TargetAchievementView> data = db.TargetAchievementViewPaging(pageNumber: ViewBag.TargetAchievementViewPage,
                                    pageSize: 20,
                                    sort: ViewBag.TargetAchievementViewSort,
                                    sortdir: ViewBag.TargetAchievementViewDir,
                                    count: out count, Filters: Model
                                    );
                        var grid = new WebGrid(ajaxUpdateContainerId: "table-daily-upate-view",
                            ajaxUpdateCallback: "TableDailyUpateViewCallback", rowsPerPage: 20
                            );
                        grid.Bind(source: data, autoSortAndPage: false, rowCount: count);
                        @grid.GetHtml(
                           tableStyle: "table table-striped table-bordered be-pagination-spl",
                           htmlAttributes: new { @id = "example" },
                           columns: new[] {
                               grid.Column(columnName:"Name",
                               header:Html.AdminLTESorter("Name","Name",grid),
                               format:(item)=>@Html.AdminLTEParagraph((string)@item.Name),
                               style:"name",canSort:true),

                               grid.Column(columnName:"UserName",header:"User Name",format:null,style:"user-name",canSort:false),

                               grid.Column(columnName:"Location",header:"Location",
                               format:(item)=>@Html.AdminLTEParagraph((string)@item.Location),
                               style:"location",canSort:true),

                       

                               grid.Column(columnName:"fromdate",
                               header:Html.AdminLTESorter("fromdate","From Date",grid),
                               format:x=>string.Format("{0:dd-MMM-yyyy}",x.fromdate),
                               style:"fromdate",canSort:true),


                                   grid.Column(columnName:"todate",
                               header:Html.AdminLTESorter("todate","To Date",grid),
                               format:x=>string.Format("{0:dd-MMM-yyyy}",x.todate),
                               style:"todate",canSort:true),


                               grid.Column(columnName:"target_amt",header:"Target",      format:x=>string.Format("{0:0.00}",x.target_amt),   style:"target_amt",canSort:false),
                               grid.Column(columnName:"achieved_amt",header:"Achieved",      format:x=>string.Format("{0:0.00}",x.achieved_amt),   style:"achieved_amt",canSort:false)
                           },
                           footerStyle: "extra-table-pager"
                           )

                        @grid.PagerList(mode: WebGridPagerModes.FirstLast | WebGridPagerModes.NextPrevious | WebGridPagerModes.Numeric,
                           nextText: "NEXT",
                           firstText: "FIRST",
                           previousText: "PREV.",
                           lastText: "LAST")
                    }
                }
            </div>
        </div>
    </div>

</section><!-- /.content -->
