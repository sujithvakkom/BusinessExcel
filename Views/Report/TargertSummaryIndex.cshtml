
@using BusinessExcel.Models
@using BusinessExcel.Controllers
@using BootstrapHtmlHelper
@using BusinessExcel.Providers.ProviderContext
@using BusinessExcel.Controllers.JSON



@using BusinessExcel.Providers.ProviderContext.Entities




@model TargetSummaryView



<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        @BusinessExcel.Controllers.ReportController.TARGET_SUMMARY_ME_TITLE
        <small>List</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> @BusinessExcel.Controllers.ReportController.REPORTCONTROLLER</a></li>
        <li class="active">@BusinessExcel.Controllers.ReportController.TARGET_SUMMARY_ME_TITLE</li>
    </ol>
</section>


<!-- Main content -->
<section class="content">


    <!-- Your Page Content Here -->
    @using (Ajax.BeginForm(ReportController.TARGET_SUMMARY_FILTER,
                                                ReportController.REPORTCONTROLLER,
                                                new AjaxOptions()
                                                {
                                                    HttpMethod = "Get",
                                                    InsertionMode = InsertionMode.Replace,
                                                    UpdateTargetId = "target_summary_display",
                                            //OnBegin = "begin",
                                            //OnBegin = "move('#page-load')",
                                            //OnComplete = "ajax_call_load_complete('#page-load')",
                                            //OnSuccess = "success",
                                            OnFailure = "loadin_failed",
                                                    LoadingElementId = "summary-load-progress"


                                                }))

    {


        <!-- Your Page Content Here -->
        <div class="box box-default collapsed-box">
            <div class="box-header with-border">
                <h3 class="box-title">Filters</h3>
                <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
                </div><!-- /.box-tools -->
            </div><!-- /.box-header -->


            <div class="box-body">

                <div class="row">

                    <div class="col-md-3">

                        @Html.AdminLTEDropDownListFor(
m => m.user_name,
htmlLabelAttributes: null,
htmlDropDownAttributes: new Dictionary<string, object>() {
                                                                                                         { "class", "form-control select2" }
                                             },
htmlGroupAttributes: null, //new Dictionary<string, object>() { { "class", "col-md-4" } },
autoCompleteOptions: new AutoCompleteOptions()
{
    AjaxOptions = new AjaxOptions()
    {
        HttpMethod = "GET",
        Url = Url.Action(actionName: JSONController.USERAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
    },
    DescriptionField = "full_name",
    IDField = "user_name",
    Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
    // SelectedItem = ViewData[ReportController.SELECTED_FILTED_USER],
    IsAutoComplete = true,
    SelectItems = null
},
showLabel: true)

                    </div>



                    <div class="col-md-2">
                        @Html.AdminLTEDropDownListFor(
expression: m => m.location_id,
htmlLabelAttributes: null,
htmlDropDownAttributes: new Dictionary<string, object>() {
                                                                    { "class", "form-control select2" }
             },
htmlGroupAttributes: null,// new Dictionary<string, object>() { { "class", "col-md-3" }, },
autoCompleteOptions: new AutoCompleteOptions()
{
    AjaxOptions = new AjaxOptions()
    {
        HttpMethod = "GET",
        Url = Url.Action(actionName: JSONController.LOCATIONAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
    },
    DescriptionField = "description",
    IDField = "location_id",
    Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
    SelectedItem = ViewData[ReportController.SELECTED_FILTED_LOCATION],
    IsAutoComplete = true,
    SelectItems = null
},
showLabel: true)
                    </div>


                    <div class="col-md-2">
                        @Html.AdminLTEDropDownListFor(
        m => m.roster_id,
        htmlLabelAttributes: null,
        htmlDropDownAttributes: new Dictionary<string, object>() {
                           { "class", "form-control select2" }
        },
        htmlGroupAttributes: null, //new Dictionary<string, object>() { { "class", "col-md-4" } },
        autoCompleteOptions: new AutoCompleteOptions()
        {
            AjaxOptions = new AjaxOptions()
            {
                HttpMethod = "GET",
                Url = Url.Action(actionName: JSONController.ROSTERAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
            },
            DescriptionField = "name",
            IDField = "roster_id",
            Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
            // SelectedItem = ViewData[ReportController.SELECTED_FILTED_LOCATION],
            IsAutoComplete = true,
            SelectItems = null
        },
        showLabel: true,
        extras: new System.Linq.Expressions.Expression<Func<TargetSummaryView, int?>>[] { m => m.location_id }
        )

                    </div>

                    <div class="col-md-2">

                        @Html.AdminLTEDropDownListFor(
m => m.target_status_id,
htmlLabelAttributes: null,
htmlDropDownAttributes: new Dictionary<string, object>() {
                                                                                                                 { "class", "form-control select2 " }
                               },
htmlGroupAttributes: null,// new Dictionary<string, object>() { { "class", "col-md-12" } },
autoCompleteOptions: new AutoCompleteOptions()
{
    AjaxOptions = new AjaxOptions()
    {
        HttpMethod = "GET",
        Url = Url.Action(actionName: JSONController.TARGET_STATUS_AUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)

    },
    DescriptionField = "target_status",
    IDField = "target_status_id",
    Formate = "'<tr><td><span>' + state.text + '</span></td></tr>'",
    //  SelectedItem = ViewData[ReportController.SELECTED_FILTED_TARGET_STATUS],
    IsAutoComplete = true,
    SelectItems = null
},
showLabel: true)
                    </div>


                    <div class="col-md-2" style="padding-top: 1.5em">

                        @Html.AdminLTEFromSubmitter("Filter",
        "summary-load-progress",
        new Dictionary<string, object>() {
                           { "type", "submit" } ,
                           { "class","btn btn-primary"}
        },
        Url.Content("~/Images/progress.gif")
        )

                        @*<input type="submit" value="Filter" class="btn btn-primary myfilter" id="filter" />
                            <div id="loading" style="padding-top:1em"></div>*@
                    </div>






                </div>
                <div class="row">
                    <div class="col-md-1">

                        @Html.AdminLTEActionLink(
linkText: BusinessExcel.Controllers.ReportController.EXPORT_TARGET_SUMMARY_EXCEL_TITLE,
actionName: BusinessExcel.Controllers.ReportController.EXPORT_TARGET_SUMMARY_EXCEL,
controllerName: BusinessExcel.Controllers.ReportController.REPORTCONTROLLER,
cssClass: "btn btn-link btnexport", routeValues: Model,
carrot: "fa fa-download")
                    </div>
                </div>

            </div>            <!-- /.box-body -->

        </div><!-- /.box -->

    }

    <div id="target_summary_display">

        @{Html.RenderAction(BusinessExcel.Controllers.ReportController.TARGET_SUMMARY_FILTER_VIEW, Model);}

    </div>

</section><!-- /.content -->
<script>
    $(document).ready(function () {
        viewInit()
    });
</script>
