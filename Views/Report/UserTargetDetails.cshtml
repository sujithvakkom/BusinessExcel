

@using BusinessExcel.Models
@using BusinessExcel.Controllers
@using BootstrapHtmlHelper
@using BusinessExcel.Providers.ProviderContext
@using BusinessExcel.Providers.ProviderContext.Entities
@using BusinessExcel.Controllers.JSON


@model UserTargetDetailsView

<div id="userData">

  
    <div class="box">

        
            <div class="box-header with-border">
                <section class="content-header">
                    <h1>
                        @BusinessExcel.Controllers.ReportController.USER_TARGET_ACHIEVEMENT_PAGE_TITLE (@Model.UserName)
                        <small>Control panel</small>
                    </h1>
                    <ol class="breadcrumb">
                        <li><a href="#"><i class="fa fa-dashboard"></i> Manager</a></li>
                        <li class="active">Manager Panel</li>
                    </ol>
                </section>


            </div>
          
            @*<section class="content-header">
                <h1>
                    @BusinessExcel.Controllers.ReportController.USER_TARGET_ACHIEVEMENT_TITLE
                    <small>Control panel</small>
                </h1>
                <ol class="breadcrumb">
                    <li><a href="#"><i class="fa fa-dashboard"></i> Manager</a></li>
                    <li class="active">Manager Panel</li>
                </ol>
            </section>*@
            <div class="box-body">

                <section class="content">

                    @using (Ajax.BeginForm(

actionName: BusinessExcel.Controllers.ReportController.USER_TARGET_DETAILS,
routeValues: null,

ajaxOptions: new AjaxOptions()
{
    HttpMethod = "Get",
    UpdateTargetId = "userData",
    InsertionMode = InsertionMode.Replace,
    OnSuccess = "RefreshTargetList",
    OnFailure = ""
},
htmlAttributes: new { @class = "form-inline" })
                                                                                                        )
                    {



                        <div id="usrDet">

                            <div id="usrHead" style="padding:2%;background-color:#d7d9db ;border-radius:5px">

                                <div class="row">


                                    <div class="col-md-3">

                                        @Html.AdminLTETextBoxFor(m => m.Type,
new Dictionary<string, object>() { { "class", "control-label col-md-6" } },
new Dictionary<string, object>() { { "class", "form-control col-md-6" }, { "autocomplete", "off" }, { "readonly", "readonly" }, { "Value", Model.Type } },
null,
null,
"",
true,
true,
true)


                                    </div>
                                    <div class="col-md-3">

                                        @Html.AdminLTETextBoxFor(m => m.Quarter_Name,
new Dictionary<string, object>() { { "class", "control-label col-md-6" } },
new Dictionary<string, object>() { { "class", "form-control col-md-6" }, { "autocomplete", "off" }, { "readonly", "readonly" }, { "Value", Model.Quarter_Name } },
null,
null,
"",
true,
true,
true)


                                    </div>

                                    <div class="col-md-3">

                                        @Html.AdminLTETextBoxFor(m => m.Account,
new Dictionary<string, object>() { { "class", "control-label col-md-6" } },
new Dictionary<string, object>() { { "class", "form-control col-md-6" }, { "autocomplete", "off" }, { "readonly", "readonly" }, { "Value", Model.Account } },
null,
null,
"",
true,
true,
true)


                                    </div>

                                </div>


                                <div class="row">
                                    <div class="col-md-3">

                                        @*@Html.AdminLTETextBoxFor(m => m.UserName,
                    null,
                    new Dictionary<string, object>() { { "class", "form-control" }, { "autocomplete", "off" }, { "readonly", "readonly" }, { "Value", Model.UserName } },
                    null,
                    null,
                    "",
                    true,
                    true,
                    true)*@
                                        <div class="form-group has-feedback" name="form-group-staffcode">


                                            <label for="staffcode" class="control-label col-md-6">Staff Code</label>
                                            <input type="text" class="form-control col-md-6" id="staffcode" readonly value=@Model.UserName >
                                        </div>
                                    </div>
                                    <div class="col-md-3">

                                        @Html.AdminLTETextBoxFor(m => m.SalesMan,
new Dictionary<string, object>() { { "class", "control-label col-md-6" } },
new Dictionary<string, object>() { { "class", "form-control col-md-6" }, { "autocomplete", "off" }, { "readonly", "readonly" }, { "Value", Model.SalesMan } },
null,
null,
"",
true,
true,
true)
                                    </div>
                                    <div class="col-md-3">

                                        @Html.AdminLTETextBoxFor(m => m.FieldMan,
new Dictionary<string, object>() { { "class", "control-label col-md-6" } },
new Dictionary<string, object>() { { "class", "form-control col-md-6" }, { "autocomplete", "off" }, { "readonly", "readonly" }, { "Value", Model.FieldMan } },
null,
null,
"",
true,
true,
true)
                                    </div>
                                </div>

                                <div class="row">

                                    @Html.AdminLTEDropDownListFor(
                                                                        m => m.Location_Id,
                                                                        htmlLabelAttributes: new Dictionary<string, object>() { { "class", "control-label col-md-6" } },
                                                                        htmlDropDownAttributes: new Dictionary<string, object>() {
                                { "class", "form-control select2 " },{ "disabled","true"}
                                                                        },
                                                                        htmlGroupAttributes: new Dictionary<string, object>() { { "class", "col-md-4" } },
                                                                        autoCompleteOptions: new AutoCompleteOptions()
                                                                        {
                                                                            AjaxOptions = new AjaxOptions()
                                                                            {
                                                                                HttpMethod = "GET",
                                                                                Url = Url.Action(actionName: JSONController.LOCATIONAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
                                                                            },
                                                                            DescriptionField = "description",
                                                                            IDField = "location_id",
                                                                            Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
                                                                            SelectedItem = ViewData[ReportController.SELECTED_FILTED_LOCATION],
                                                                            IsAutoComplete = true,
                                                                            SelectItems = null
                                                                        },
                                                                        showLabel: true)

                                    @{ if (User.IsInRole("User"))
                                        {
                                           


                                            @*@Html.AdminLTEDropDownListFor(
                                                                        m => m.Location_Id,
                                                                        htmlLabelAttributes: new Dictionary<string, object>() { { "class", "control-label col-md-6" } },
                                                                        htmlDropDownAttributes: new Dictionary<string, object>() {
                                { "class", "form-control select2 " },{ "disabled","true"}
                                                                        },
                                                                        htmlGroupAttributes: new Dictionary<string, object>() { { "class", "col-md-4" } },
                                                                        autoCompleteOptions: new AutoCompleteOptions()
                                                                        {
                                                                            AjaxOptions = new AjaxOptions()
                                                                            {
                                                                                HttpMethod = "GET",
                                                                                Url = Url.Action(actionName: JSONController.LOCATIONAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
                                                                            },
                                                                            DescriptionField = "description",
                                                                            IDField = "location_id",
                                                                            Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
                                                                            SelectedItem = ViewData[ReportController.SELECTED_FILTED_LOCATION],
                                                                            IsAutoComplete = true,
                                                                            SelectItems = null
                                                                        },
                                                                        showLabel: true)*@


                                            @Html.AdminLTEDropDownListFor(
                                                                        m => m.UserName,
                                                                        htmlLabelAttributes: new Dictionary<string, object>() { { "class", "control-label col-md-6" } },
                                                                        htmlDropDownAttributes: new Dictionary<string, object>() {
                                { "class", "form-control select2" },{ "disabled","true"}
                                                                        },
                                                                        htmlGroupAttributes: new Dictionary<string, object>() { { "class", "col-md-4" } },
                                                                        autoCompleteOptions: new AutoCompleteOptions()
                                                                        {
                                                                            AjaxOptions = new AjaxOptions()
                                                                            {
                                                                                HttpMethod = "GET",
                                                                                Url = Url.Action(actionName: JSONController.USERAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
                                                                            },
                                                                            DescriptionField = "full_name",
                                                                            IDField = "user_name",
                                                                            Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
                                                                            SelectedItem = ViewData[ReportController.SELECTED_FILTED_USER],
                                                                            IsAutoComplete = true,
                                                                            SelectItems = null
                                                                        },
                                                                        showLabel: true)

                                        }
                                        else
                                        {

                                          


                                            @*@Html.AdminLTEDropDownListFor(
                                                                        m => m.Location_Id,
                                                                        htmlLabelAttributes: new Dictionary<string, object>() { { "class", "control-label col-md-6" } },
                                                                        htmlDropDownAttributes: new Dictionary<string, object>() {
                                { "class", "form-control select2" }
                                                                        },
                                                                        htmlGroupAttributes: new Dictionary<string, object>() { { "class", "col-md-4" } },
                                                                        autoCompleteOptions: new AutoCompleteOptions()
                                                                        {
                                                                            AjaxOptions = new AjaxOptions()
                                                                            {
                                                                                HttpMethod = "GET",
                                                                                Url = Url.Action(actionName: JSONController.LOCATIONAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
                                                                            },
                                                                            DescriptionField = "description",
                                                                            IDField = "location_id",
                                                                            Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
                                                                            SelectedItem = ViewData[ReportController.SELECTED_FILTED_LOCATION],
                                                                            IsAutoComplete = true,
                                                                            SelectItems = null
                                                                        },
                                                                        showLabel: true)*@


                                            @Html.AdminLTEDropDownListFor(
                                                                        m => m.UserName,
                                                                        htmlLabelAttributes: new Dictionary<string, object>() { { "class", "control-label col-md-6" } },
                                                                        htmlDropDownAttributes: new Dictionary<string, object>() {
                                { "class", "form-control select2" }
                                                                        },
                                                                    htmlGroupAttributes: new Dictionary<string, object>() { { "class", "col-md-4  " } },
                                                                        autoCompleteOptions: new AutoCompleteOptions()
                                                                        {
                                                                            AjaxOptions = new AjaxOptions()
                                                                            {
                                                                                HttpMethod = "GET",
                                                                                Url = Url.Action(actionName: JSONController.USERAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
                                                                            },
                                                                            DescriptionField = "full_name",
                                                                            IDField = "user_name",
                                                                            Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
                                                                            SelectedItem = ViewData[ReportController.SELECTED_FILTED_USER],
                                                                            IsAutoComplete = true,
                                                                            SelectItems = null
                                                                        },
                                                                        showLabel: true)

                                            <div class="col-md-1" style="padding-top: 2.5em">

                                                <button type="submit" class="btn btn-primary " id="btnAdd">Search</button>

                                            </div>

                                        }
                                    }












                                </div>
                                </div>



                                <div style="margin-top:15px" id="target-achievement-display">
                                  

                                @if (Model.QuarterMonths.Count > 0)
                                {
                                    foreach (var month in Model.QuarterMonths)
                                    {



                                        <div id="target-achievement-display_@month" class="well well-sm">

                                            @Html.Action(BusinessExcel.Controllers.ReportController.USERTARGET_ACHIEVEMENT_VIEW, new TargetAchievementView { Month = month, user_id = Model.UserID })

                                        </div>
                                    }
                                }
                                else
                                {

                               
                                    <div class="modal fade" id="modalnew" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content" style="width:50%;margin: auto;">
                                                <div class="modal-header">
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                                   
                                                </div>
                                                <div class="modal-body">
                                                    <h4 class="modal-title" id="myModalLabel">Target not assigned</h4>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                                 
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                  

                                   


                                }


                                </div>




                            </div>
                                    }
                </section><!-- /.content -->
            </div>



        </div>

</div>



<style>
    .well-sm{
        padding: 0px,0px,0px,9px;
        border: 1px solid #cacab8;
    }
            .content{
                padding:0px;
            }
    .control-label
    {
        padding:15px 0px 0px 0px;
    }
    /*#target-achievement-display_JAN {

            background-color:#4f7a9a
            }

            #target-achievement-display_JUL {

            background-color:#4f7a9a
            }*/
</style>



<script>

    $('#btnAdd').click(function () {
        var loadingelement = '@Html.Raw(ConstantUsages.LOADING_ELEMENT)'
        
        $('#target-achievement-display').empty();
        $('#target-achievement-display').append(loadingelement);

        
    })

        

    //   $('staffcode').val($("#UserName option:selected").val());

    $('#modalnew').modal('show');
    function SelectedUserName(ddlObject) {



        var username = $(ddlObject).find('option:selected').text();
        $("#UserName").val(username);

    }

    //$('#foo').select2('disable');

    ////To get selected value an text of dropdownlist
    //function SelectedUserName(ddlObject) {



    //    var username = $(ddlObject).find('option:selected').text();
    //    $("#name").val(username);

    //}

    //function SelectedLocationName(ddlObject) {



    //    var username = $(ddlObject).find('option:selected').text();
    //    $("#location_name").val(username);

    //}
   
    //--userData

    
    $(document).ready(function () {
        var models = [];
        @foreach (var d in Model.QuarterMonths)
        {
            @:models.push("@d");
        }
        var total
        var targetTotal = Number(0);
        var AchAmtTotal = Number( 0);
        var temp = Number(0);

        $.each(models, function (key, model) {
            $('#Tsheet' + model + '  .hid_Base_Incentive').each(function () {
                total = $(this).val();
            });

            $('#Tsheet' + model + ' .Target_amt p').each(function () {
                try {
                    //alert($(this)[0].innerHTML.replace(/\,/g, ""));
                    temp = Number($(this)[0].innerHTML.replace(/\,/g, ""));
                    targetTotal = targetTotal + temp;
                }
                catch (err) { }
            });

            $('#Tsheet' + model + ' .Achieved_Amt p').each(function () {

                try {
                    temp = Number($(this)[0].innerHTML.replace(/\,/g, ""));
                    AchAmtTotal = AchAmtTotal + temp;
                }
                catch (err) { }
            });

            $('#base_incentive_' + model).val(numberWithCommas(total));
            //$('#Tsheet'+model+ ' tbody').append('<tr><td><b>Total</b></td><td></td><td class="numaric"><b>' + targetTotal.toFixed(2) + '</b></td><td class="numaric"><b>' + AchAmtTotal.toFixed(2) + '</b></td> </tr>');
            $('#Tsheet' + model + ' tbody').append(
                '<tr><td><b>Total</b></td><td></td><td class="numaric"><b>' +
                numberWithCommas(targetTotal) +
                '</b></td><td class="numaric"><b>' +
                numberWithCommas(AchAmtTotal) + '</b></td> </tr>');
        });
    });

    @*$(document).ready(function () {

        var total = 0;
        var targetTotal = 0;
        var AchAmtTotal = 0;

        var model = @Html.Raw(Json.Encode(Model.Month));



        var totRows = 0;
        //$('#Tsheet .hid_Base_Incentive').each(function () {

        //  //  targetTotal = total + parseFloat($(this)[0].innerHTML.toLocaleString());
        //    //totRows++;

        //    total = total + parseFloat($(this).val());

        //});

        $('#TsheetJUL .Target_amt').each(function () {

            targetTotal = targetTotal + parseFloat($(this)[0].innerHTML.toLocaleString());
            alert('');
        });

        //$('#Tsheet .Achieved_Amt').each(function () {

        //    AchAmtTotal = AchAmtTotal + parseFloat($(this)[0].innerHTML.toLocaleString());

        //});


      //  $('#base_incentive').val(total.toFixed(2));

       // $('#TsheetJUL').append($('tbody').append('<tr><td><b>Total</b></td><td><b>' + targetTotal.toFixed(2) + '</b></td></tr>'));
    });*@
</script>