@using BusinessExcel.Models
@using BusinessExcel.Providers.ProviderContext.Entities
@using BusinessExcel.Providers.ProviderContext
@using BusinessExcel.Controllers.JSON
@using BusinessExcel.Controllers
@using BootstrapHtmlHelper

@model BaseTarget

@{
    LocationDetail selectionLocation = new LocationDetail();
    UserDetail selectionUser = new UserDetail();
    using (var db = new SalesManageDataContext())
    {
        selectionLocation = db.getLocationDetail(Model.Location);
        selectionUser = db.getUserDetail(Model.UserName);
    }
}


<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">@TargetController.CREATELOCATIONTARGET_TITLE</h3>
    </div>
    <div class="box-body table-form">
        @using (Ajax.BeginForm(
    controllerName: TargetController.TARGET,
    actionName: TargetController.LOCATIONTARGET,
    htmlAttributes: new { id = "target-location-create-form" },
    routeValues: null,
    ajaxOptions:
    new AjaxOptions()
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "Post",
        UpdateTargetId = "target-location-create",
        OnBegin = "move('#page-load')",
        OnComplete = "ajax_call_load_complete('#page-load')",
        OnFailure = "loadin_failed",
        LoadingElementId = "target-create-progress"
    }))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-3 padding-label">
                        Period
                    </div>
                    <div class="col-md-7">
                        @Html.AdminLTEDateRangePickerFor(
                                m => Model.StartDate,
                                m => Model.EndDate,
                                "Date Range",
                                htmlLabelAttributes: null,
                                htmlTextBoxAttributes: new Dictionary<string, object>() { { "class", "form-control" }, { "autocomplete", "off" } },
                                htmlGroupAttributes: null,
                                htmlGlyphiconsAttributes: null,
                                glyphiconsName: "fa fa-calendar",
                                showLabel: false,
                                hasValidation: true,
                                showGlyphicons: true)
                    </div>
                </div>
            </div>

                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-md-3 padding-label">
                            Site
                        </div>
                        <div class="col-md-7">
                            @Html.AdminLTEDropDownListFor(
                                    m => Model.Location,
                                    htmlLabelAttributes: null,
                                    htmlDropDownAttributes: new Dictionary<string, object>() {
                                        { "class", "form-control select2" }
                                    },
                                    htmlGroupAttributes: new Dictionary<string, object>() { },
                                    autoCompleteOptions: new AutoCompleteOptions()
                                    {
                                        AjaxOptions = new AjaxOptions()
                                        {
                                            HttpMethod = "GET",
                                            Url = Url.Action(actionName: JSONController.LOCATIONAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
                                        },
                                        DescriptionField = "description",
                                        IDField = "location_id",
                                        Formate = "'<tr><td><span>' + state.text + '</span></td></tr>'",
                                        IsAutoComplete = true,
                                        SelectedItem = selectionLocation
                                    },
                                    showLabel: false)
                        </div>
                    </div>
                </div>
                <div class="box-header with-border">
                    <h3 class="box-title">@TargetController.TARGETTEMPLATELINE_TITLE</h3>
                </div>
                    <div class="row table-form-row" id="target-row">
                        <div class="row">
                            <div class="col-md-12">
                                @{Html.RenderPartial(TargetController.TARGETLINE, Model.LineTargets);}
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-offset-6 col-md-1 padding-label">
                                Total
                            </div>
                            <div class="col-md-3 table-fields">

                                @Html.AdminLTETextBoxFor(m => m.TotalTarget,
                                    null,
                                    new Dictionary<string, object>() {
                                        { "class", "form-control numaric" }, { "readonly", "" }
                                    },
                                    null,
                                    null,
                                    "",
                                    false,
                                    true,
                                    true)
                            </div>
                        </div>
                    </div>
                                    if (ViewBag.Result != null)
                                    {
                                        var className = ViewBag.Result == -1 ? @"alert alert-danger" : @"alert alert-success";
                                        var message = ViewBag.Result == -1 ? "<b>Cannot save.</b>" : "<b>Successfully saved.</b>";
                                        if (ViewBag.ModelErrors != null)
                                        {
                                            foreach (var err in ((string)ViewBag.ModelErrors).Split(new[] { Environment.NewLine }, StringSplitOptions.None))
                                            { message += ("<p>" + err + "</p>"); }
                                        }
                                        if (ViewBag.Message != null)
                                        {
                                            message += ("<p>" + ViewBag.Message + "</p>");
                                        }
                                        <div class="@className" role="alert">@Html.Raw(message)</div>
                                    }

                                    <input class="btn btn-primary pull-right" type="submit" value="Save" />


                                        Html.RenderPartial("_Progress", "target-create-progress");
                                    }
    </div>
</div>