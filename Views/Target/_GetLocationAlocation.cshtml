@using BusinessExcel.Models
@using BusinessExcel.Providers.ProviderContext.Entities
@using BusinessExcel.Providers.ProviderContext
@using BusinessExcel.Controllers.JSON
@using BusinessExcel.Controllers
@using BootstrapHtmlHelper
@model BaseTarget

<div class="row box-body ">
    @if (Model.LineTargets.Length > 0)
    {
        var total = Model.LineTargets.Sum(x => x.Target);
        var formID = "target-distribute-form-" + Model.TargetTemplate + "-" + Model.Location + "-" + Model.UserName;
        using (Ajax.BeginForm(
    controllerName: TargetController.TARGET,
    actionName: TargetController.TARGETDISTRIBUTION,
    htmlAttributes: new { id = formID },
    routeValues: null,
    ajaxOptions:
    new AjaxOptions()
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "Post",
        UpdateTargetId = "target-distribution-assign",
        OnBegin = "move('#page-load')",
        OnComplete = "ajax_call_load_complete('#page-load')",
        OnFailure = "loadin_failed",
        LoadingElementId = "target-assing-traget-progress"
    }))
        {
            @Html.AntiForgeryToken()
            <div class="row table-form">
            </div>
            <div>

                @Html.HiddenFor(m => Model.TargetTemplate)
                @Html.HiddenFor(m => Model.Location)
                @Html.HiddenFor(m => Model.UserName)

            </div>
            <div class="table-form" style="padding: 0px 30px 0px 30px">

                <div class="row table-fields-header">
                    <div class="col-md-1 table-fields">
                        Has Bonus 
                    </div>
                    <div class="col-md-2 table-fields">
                        Category Line
                    </div>
                    <div class="col-md-2 table-fields">
                        Total Target
                    </div>
                    <div class="col-md-2 table-fields">
                        Assigned Target
                    </div>
                    <div class="col-md-2 table-fields">
                        Available Target
                    </div>
                    <div class="col-md-1 table-fields">
                        Allocation
                    </div>
                    <div class="col-md-2 table-fields">
                        Target
                    </div>
                </div>
                <div id="target-row">
                    @for (int i = 0; i < Model.LineTargets.Length; i++)
                    {
                        CategoryDetail selection = new CategoryDetail();
                        using (var db = new SalesManageDataContext())
                        {
                            int id = 0;
                            selection = db.getCategoryDetails(Model.LineTargets[i].Catogery);
                        }
                        <div class="row">
                            <div class="col-md-1 table-fields">
                                @Html.AdminLTECheckBoxFor(m => Model.LineTargets[i].IsBonusLine,
null,
new Dictionary<string, object>() { { "class", "form-control pull-right" }, { "autocomplete", "off" } },
null,
null,
false,
true)
                            </div>
                            <div class="col-md-2 table-fields">
                                @Html.HiddenFor(m => Model.LineTargets[i].Catogery)
                                @Html.AdminLTEDropDownListFor(m => Model.LineTargets[i].Catogery,
htmlLabelAttributes: null,
htmlDropDownAttributes: new Dictionary<string, object>() { { "class", "form-control select2" }, { "style", "border-style:none !important" }, { "disabled", "true" } },
htmlGroupAttributes: new Dictionary<string, object>() { },
autoCompleteOptions: new AutoCompleteOptions()
{
    AjaxOptions = new AjaxOptions()
    {
        HttpMethod = "GET",
        Url = Url.Action(actionName: JSONController.CATEGORYAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
    },
    DescriptionField = "description",
    IDField = "category_id",
    Formate = "'<tr><td><span>' + state.text + '</span></td></tr>'",
    SelectedItem = selection,
    IsAutoComplete = true,
    SelectItems = null
}, showLabel: false)
                            </div>
                            <div class="col-md-2 table-fields">
                                @{var idTotalTarget = "LineTargets_" + i.ToString() + "__TotalTarget";}
                                <div id="@idTotalTarget" class="form-control text-info numaric">
                                    @Html.AdminLTEParagraph(Model.LineTargets[i].TotalTarget, new Dictionary<string, object> { { "class", "numaric" } })
                                </div>
                            </div>
                            <div class="col-md-2 table-fields">
                                @{var idAssignedForCurrentUser = "LineTargets_" + i.ToString() + "__AssignedForCurrentUser";}
                                <div id="@idAssignedForCurrentUser" class="form-control text-info numaric">
                                    @Html.AdminLTEParagraph(Model.LineTargets[i].AssignedForCurrentUser, new Dictionary<string, object> { { "class", "numaric" } })
                                </div>
                            </div>
                            <div class="col-md-2 table-fields">
                                @{var idAvilable = "LineTargets_" + i.ToString() + "__AvilableTarget";}
                                <div id="@idAvilable" class="form-control text-info numaric">
                                    @Html.AdminLTEParagraph(Model.LineTargets[i].Target, new Dictionary<string, object> { { "class", "numaric" } })
                                </div>
                            </div>
                            <div class="col-md-1 table-fields">
                                @Html.AdminLTETextBox("LineTargets[" + i.ToString() + "].Allocation",
                          null,
                          new Dictionary<string, object>() {
                              { "class", "form-control numaric" },
                              { "autocomplete", "off" } ,
                              { "onchange", "target_line_changed(this,'"+formID+"')" } },
                          null,
                          null,
                          "fa-percent",
                          false,
                          true,
                          true,
                         (Model.LineTargets[i].AssignedForCurrentUser / Model.LineTargets[i].TotalTarget) * 100
                                )
                            </div>
                            <div class="col-md-2 table-fields">
                                @Html.AdminLTETextBoxFor(m => Model.LineTargets[i].Target,
                          null,
                          new Dictionary<string, object>() {
                              { "class", "form-control numaric" },
                              { "autocomplete", "off" } ,
                              { "onchange", "target_line_changed(this,'"+formID+"')" } },
                          null,
                          null,
                          "",
                          false,
                          true,
                          true)
                            </div>
                        </div>
                                    }
                    <div class="row">
                        <div class="col-lg-offset-10 col-md-2 table-fields">
                            @Html.AdminLTETextBox("TotalTarget",
                          null,
                          new Dictionary<string, object>() { { "class", "form-control numaric" }, { "autocomplete", "off" }, { "disabled", "true" } },
                          null,
                          null,
                          "",
                          false,
                          true,
                          true,
                          total)
                        </div>
                    </div>
                </div>
            </div>
            <div class="container sp">
                <div class="row box-body">
                    <div class="col-lg-offset-10 col-md-2">
                        @{
                            Html.RenderPartial("_Progress", "target-assing-traget-progress");
                        }
                        <input type="submit" class="btn btn-primary" value="Assign Targets" />
                    </div>
                </div>
            </div>
                                }
                            }
</div>