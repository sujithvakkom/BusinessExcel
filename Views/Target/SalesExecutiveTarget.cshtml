@using BusinessExcel.Models
@using BusinessExcel.Providers.ProviderContext.Entities
@using BusinessExcel.Providers.ProviderContext
@using BusinessExcel.Controllers.JSON
@using BusinessExcel.Controllers
@using BootstrapHtmlHelper

@model SalesExcecutiveTarget


@{
    var temp = new Dictionary<string, object>() { { "class", "form-control" }, { "autocomplete", "off" } };
}
<section class="content-header">
    <h1>
        @TargetController.TARGET
        <small>@TargetController.SALES_EXECUTIVE_TARGET</small>
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="#"><i class="fa fa-dashboard"></i>@TargetController.SALES_EXECUTIVE_TARGET</a>
        </li>
        <li class="active">@AccountsController.WELCOME_TITLE</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">

    <div class="row">
        <div class="col-md-8" id="global-setting-details">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">@TargetController.SALES_EXECUTIVE_TARGET</h3>
                </div>
                <div class="box-body table-form">
                    @using (Ajax.BeginForm(
                        controllerName: TargetController.TARGET,
                        actionName: TargetController.SALESEXECUTIVETARGET,
                        htmlAttributes: new { id = "target-location-create-form" },
                        routeValues: null,
                        ajaxOptions: new AjaxOptions()
                        {
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "Post",
                            UpdateTargetId = "target-location-create",
                            OnBegin = "move('#page-load')",
                            OnComplete = "ajax_call_load_complete('#page-load')",
                            OnFailure = "loadin_failed",
                            LoadingElementId = "target-create-progress"
                        }))
                    {
    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-6">
                            @Html.AdminLTEDropDownListFor(
                         m => m.UserName,
                         htmlLabelAttributes: null,
                         htmlDropDownAttributes: new Dictionary<string, object>() {
                                                { "class", "form-control select2" }
                                            },
                         htmlGroupAttributes: new Dictionary<string, object>() { },
                         autoCompleteOptions: new AutoCompleteOptions()
                         {
                             AjaxOptions = new AjaxOptions()
                             {
                                 HttpMethod = "GET",
                                 Url = Url.Action(actionName: JSONController.USERAUTOCOMPLETERFORSE, controllerName: JSONController.JSONCONTROLLER)
                             },
                             DescriptionField = "full_name",
                             IDField = "user_name",
                             Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
                             SelectedItem = ViewData[RosterController.SELECTED_FILTED_USER],

                             IsAutoComplete = true,
                             SelectItems = null
                         },
                         showLabel: false)

                        </div>
                        <div class="col-md-6">
                            @Html.AdminLTEDateRangePickerFor(
                            m => Model.StartDate,
                            m => Model.EndDate,
                            "Date Range",
                            htmlLabelAttributes: null,
                            htmlTextBoxAttributes: temp,
                            htmlGroupAttributes: null,
                            htmlGlyphiconsAttributes: null,
                            glyphiconsName: "fa fa-calendar",
                            showLabel: false,
                            hasValidation: true,
                            showGlyphicons: true)
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="box-header with-border">
                                <h3 class="box-title">@TargetController.TARGETTEMPLATELINE_TITLE</h3>
                            </div>
                            <div class="row table-form-row" id="target-row">
                                <div class="row">
                                    <div class="col-md-12">


                                        @*@for (int i = 0; i < Model.LineTargets.Length; i++)
                                        {
                                            CategoryDetail selection = new CategoryDetail();
                                            using (var db = new SalesManageDataContext())
                                            {
                                                try
                                                {
                                                    int id = int.Parse(Model.LineTargets[i].Catogery);
                                                    selection = db.getCategoryDetails(id);
                                                }
                                                catch (ArgumentNullException) { }
                                                catch (Exception)
                                                {
                                                    selection = db.getCategoryDetails(Model.LineTargets[i].Catogery);
                                                }
                                            }
                                            <div class="row">
                                                <div class="col-md-offset-1 col-md-2 table-fields">
                                                    @Html.AdminLTECheckBoxFor(m => Model.LineTargets[i].IsBonusLine,
                        null,
                        new Dictionary<string, object>() { { "class", "" }, { "autocomplete", "off" } },
                        null,
                        null,
                        false,
                        true)
                                                </div>
                                                <div class="col-md-4 table-fields">
                                                    @Html.AdminLTEDropDownListFor(m => Model.LineTargets[i].Catogery,
           htmlLabelAttributes: null,
           htmlDropDownAttributes: new Dictionary<string, object>() { { "class", "form-control select2" }, { "style", "border-style:none !important;width:100%" } },
           htmlGroupAttributes: new Dictionary<string, object>() { },
           autoCompleteOptions: new AutoCompleteOptions()
           {
               AjaxOptions = new AjaxOptions()
               {
                   HttpMethod = "GET",
                   Url = Url.Action(actionName: JSONController.CATEGORYAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
               },
               DescriptionField = "description",
               IDField = "category_id",
               Formate = "'<tr><td><span>' + state.text + '</span></td></tr>'",
               SelectedItem = selection,
               IsAutoComplete = true,
               SelectItems = null
           }, showLabel: false)
                                                </div>

                                                <div class="col-md-3 table-fields">
                                                    @Html.AdminLTETextBoxFor(m => Model.LineTargets[i].Target,
                        null,
                        new Dictionary<string, object>() { { "class", "form-control numaric" }, { "autocomplete", "off" }, { "onchange", "target_line_changed()" } },
                        null,
                        null,
                        "",
                        false,
                        true,
                        false)

                                                </div>
                                            </div>
                                        }*@

                                        @{Html.RenderPartial(TargetController.TARGETLINE, Model.LineTargets);}
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6"></div>
                                    <div class="col-md-1 padding-label ">
                                        Total
                                    </div>
                                    <div class="col-md-3 table-fields">

                                        @Html.AdminLTEParagraphFor(m => m.TotalTarget,
                                           new Dictionary<string, object>() {
                                                 { "class", "form-control numaric" },
                                                 { "disabled","true"}
                                           })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-7"></div>
                        <div class="col-md-3">

                            @Html.AdminLTEFromSubmitter("Save",
                                               "target-create-progress",
                                               new Dictionary<string, object>() {
                                                   { "type", "submit" } ,
                                                   { "class","btn btn-primary"}
                                               },
                                               Url.Content("~/Images/progress.gif")
                                               )
                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>


<script>
    function change_edit_tab() {
        $('#loc-target-setup a[href="#target-location-create"]').tab('show')
    }
    function get_new_location() {
        $.ajax({
            url: "@Url.Action(TargetController._NEWLOCATIONTARGETEDITCREATE, TargetController.TARGET, null)",

            success: function (data) {
                $('#target-location-create').html(data);
            }
        })
    }
    function remove_messages() {
        $(".save-messages").html = "";
    }

    function target_line_changed() {
        var sum = Number(0);

        $("#target-row").find("input[name*='].Target']").each(function () {
            sum = sum + Number($(this).val());
        })
        $("p[id='TotalTarget']").html(sum)
    }
</script>