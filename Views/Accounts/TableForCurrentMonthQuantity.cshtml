@using BusinessExcel.Models
@using BusinessExcel.Providers.ProviderContext
@using BootstrapHtmlHelper

@model DateTimeSpan


<div id="table-current-month-quantity" class="table-responsive">
    @{

        using (var db = new SalesManageDataContext())
        {


            var source = (from dsl in db.DailyUpateView
                          join u in db.getViewersList()
                          on dsl.UserId equals u
                          group dsl by new { dsl.Item, dsl.Description,dsl.UserName,dsl.Name} into g
                          select new {
                              User = g.FirstOrDefault().UserName,
                              UserName = g.FirstOrDefault().Name,
                              Item = g.FirstOrDefault().Item,
                              ItemDescription = g.FirstOrDefault().Description,
                              TotalValue = g.Sum(_=> (decimal)_.Quantity)
                          }).AsQueryable();

            //var source = db.DailyUpateView
            //.Where(x => x.CreateTime > Model.StartDate && x.CreateTime < Model.EndDate)
            //.GroupBy(x => new { x.Item, x.Description, x.UserName, x.Name })
            //.Where(x => x.Sum(y => y.Quantity) > 0)
            //.Select(x =>
            //    new
            //    {
            //        User = x.Key.UserName.ToString(),
            //        UserName = x.Key.Name.ToString(),
            //        Item = x.Key.Item,
            //        ItemDescription = x.Key.Description,
            //        TotalValue = x.Sum(y => (decimal)y.Quantity),
            //    });

            var grid = new WebGrid(ajaxUpdateContainerId: "table-current-month-quantity",
                rowsPerPage: 20
                );

            grid.Bind(source: source, autoSortAndPage: false, rowCount: source.Count());

            @grid.GetHtml(
                           tableStyle: "table table-striped table-bordered be-pagination-spl",
                           columns: new[] {
                               grid.Column(columnName:"User",
                               header:Html.AdminLTESorter("User","User Code",grid),
                               format:(item)=>@Html.AdminLTEParagraph((string)@item.User),
                               style:"name",canSort:true),
                               grid.Column(columnName:"UserName",
                               header:Html.AdminLTESorter("UserName","User Name",grid),
                               format:(item)=>@Html.AdminLTEParagraph((string)@item.UserName),
                               style:"name",canSort:true),
                               grid.Column(columnName:"Item",
                               header:Html.AdminLTESorter("Item","Item Code",grid),
                               format:(item)=>@Html.AdminLTEParagraph((string)@item.Item),
                               style:"name",canSort:true),
                               grid.Column(columnName:"ItemDescription",
                               header:Html.AdminLTESorter("ItemDescription","Item Description",grid),
                               format:(item)=>@Html.AdminLTEParagraph((string)@item.ItemDescription),
                               style:"name",canSort:true),
                               grid.Column(columnName:"TotalValue",
                               header:"Total Qty.",
                               format:x=>string.Format("{0:0.00}",x.TotalValue),   
                               style:"values",canSort:false)
                           },
                           footerStyle: "extra-table-pager"
                           )

            @grid.PagerList(mode: WebGridPagerModes.FirstLast | WebGridPagerModes.NextPrevious | WebGridPagerModes.Numeric,
                           nextText: "NEXT",
                           firstText: "FIRST",
                           previousText: "PREV.",
                           lastText: "LAST")
        }
    }
    </div>