
@using BusinessExcel.Models
@using BusinessExcel.Controllers
@using BootstrapHtmlHelper
@using BusinessExcel.Providers.ProviderContext
@using BusinessExcel.Providers.ProviderContext.Entities
@using BusinessExcel.Controllers.JSON

@model UserViewFilters




<!-- Content Header (Page header) -->
<section class="content-header">
    @*<h1>
            @BusinessExcel.Controllers.AdminController.USERSLIST_TITLE
            <small>List</small>
        </h1>*@
    @*<ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> @BusinessExcel.Controllers.AdminController.ADMIN</a></li>
            <li class="active">@BusinessExcel.Controllers.AdminController.USERSLIST_TITLE</li>
        </ol>*@
</section>




<!-- Main content -->
<section class="content">


    <!-- Your Page Content Here -->
    @using (Ajax.BeginForm(AdminController.USERSLIST,
                                                AdminController.ADMIN,
                                                new AjaxOptions()
                                                {
                                                    HttpMethod = "Get",
                                                    UpdateTargetId = "users-table-display",
                                                    OnBegin = "move('#page-load')",
                                                    OnComplete = "ajax_call_load_complete('#page-load')",
                                                    OnFailure = "loadin_failed"
                                                }))

    {




        <!-- Your Page Content Here -->
        <div class="box box-default collapsed-box">
            <div class="box-header with-border">
                <h3 class="box-title">Filters</h3>
                <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
                </div><!-- /.box-tools -->
            </div><!-- /.box-header -->


            <div class="box-body">
                <div class="row">

                    <div class="col-md-3">

                        @Html.AdminLTEDropDownListFor(
m => m.user_name,
htmlLabelAttributes: null,
htmlDropDownAttributes: new Dictionary<string, object>() {
                                                                    { "class", "form-control select2" }
},
htmlGroupAttributes: null,
autoCompleteOptions: new AutoCompleteOptions()
{
    AjaxOptions = new AjaxOptions()
    {
        HttpMethod = "GET",
        Url = Url.Action(actionName: JSONController.USERAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
    },
    DescriptionField = "full_name",
    IDField = "user_name",
    Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
    SelectedItem = ViewData[AdminController.SELECTED_FILTED_USER],
    IsAutoComplete = true,
    SelectItems = null
},
showLabel: true)

                    </div>

                    <div class="col-md-3">

                        @Html.AdminLTEDropDownListFor(
m => m.first_name,
htmlLabelAttributes: null,
htmlDropDownAttributes: new Dictionary<string, object>() {
                                                                    { "class", "form-control select2" }
},
htmlGroupAttributes: null,
autoCompleteOptions: new AutoCompleteOptions()
{
    AjaxOptions = new AjaxOptions()
    {
        HttpMethod = "GET",
        Url = Url.Action(actionName: JSONController.USER_BY_OTHER_AUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
    },
    DescriptionField = "full_name",
    IDField = "full_name",
    Formate = "'<tr><td><span>' + state.text + '</span></td></tr>'",
    SelectedItem = ViewData[AdminController.SELECTED_FILTED_USER_FIRST_NAME],
    IsAutoComplete = true,
    SelectItems = null
},
showLabel: true)

                    </div>





                    <div class="col-md-2" style="padding-top:2.5%">

                        <input type="submit" value="Filter" class="btn btn-primary myfilter" id="filter" />
                    </div>



                </div>

            </div>            <!-- /.box-body -->

        </div><!-- /.box -->








        <div class="box box-primary">




            <div class="box-header with-border">
                <h3 class="box-title">Users List</h3>
            </div>

            <div class="box-body">

                <div id="user-list-upate-view" class="table-responsive">
                    @{

                        using (var db = new SalesManageDataContext())
                        {
                            WebGridColumn col = new WebGridColumn()
                            {

                            };




                            int count = 0;
                            List<UserListView> data = db.getUserListView(Page: ViewBag.UserUpateViewPage,
                                        RowCount: out count, search: Model.first_name
                                        );

                            var grid = new WebGrid(ajaxUpdateContainerId: "user-list-upate-view",
                                                ajaxUpdateCallback: "callBack", rowsPerPage: 6
                                                );
                            grid.Bind(source: data, autoSortAndPage: false, rowCount: count);
                            @grid.GetHtml(
                  tableStyle: "table table-striped table-bordered be-pagination-spl",
                  htmlAttributes: new { @id = "example" },

                  columns: new[] {
                      grid.Column(columnName:"first_name",header:"FirstName",format:null,style:"user-name",canSort:false),
                      grid.Column(columnName:"second_name",header:"SecondName",format:null,style:"user-name",canSort:false),
                      grid.Column(columnName:"user_name",header:"Staff Code",format:null,style:"user-name",canSort:false),
                      grid.Column(columnName:"email",header:"Email",format:null,style:"user-name",canSort:false),
                      grid.Column(columnName:"contact_number",header:"Contact Number",format:null,style:"user-name",canSort:false),
                      grid.Column(columnName:"group_name",header:"User Type",format:null,style:"user-name",canSort:false)
                      //grid.Column(columnName:"EmpCodeLookup",header:"UserType",format:null,style:"user-name",canSort:false),
                      //  grid.Column(format: item => @Html.ActionLink(item.FileName != null ? (String)item.FileName : string.Empty,"DownloadFile")
                      //grid.Column(columnName:"EmpCodeLookup",header:"User Type",      format:x=>x.EmpCodeLookup != null ? "GS":"NON GS",   style:"values",canSort:false)
                  },
                  footerStyle: "extra-table-pager"
                  )

                            @grid.PagerList(mode: WebGridPagerModes.FirstLast | WebGridPagerModes.NextPrevious | WebGridPagerModes.Numeric,
                  nextText: "NEXT",
                  firstText: "FIRST",
                  previousText: "PREV.",
                  lastText: "LAST")
                        }
                    }
                </div>
            </div>
        </div>

                        }
</section><!-- /.content -->
