

@using BusinessExcel.Models
@using BusinessExcel.Controllers
@using BootstrapHtmlHelper
@using BusinessExcel.Providers.ProviderContext
@using BusinessExcel.Providers.ProviderContext.Entities
@using BusinessExcel.Controllers.JSON


@model Roster



@using (Ajax.BeginForm(
                                                   actionName: BusinessExcel.Controllers.RosterController.AJAXCREATEROSTER,
                                                    routeValues: null,
                                                    ajaxOptions: new AjaxOptions()
                                                    {
                                                        UpdateTargetId = "roster-creation-form",
                                                        InsertionMode = InsertionMode.Replace,
                                                        OnSuccess = "refreshRosterList"
                                                    },
                                                    htmlAttributes: new { @class = "form-inline" })
                                                                                                                                                                                        )
{

    <div class="row">


        @Html.AdminLTEDropDownListFor(
                            m => m.user_name,
                            htmlLabelAttributes: null,


                              htmlDropDownAttributes: new Dictionary<string, object>() {
                                                                    { "class", "form-control select2" }

                            },
                            htmlGroupAttributes: new Dictionary<string, object>() { { "class", "col-md-3 " }, { "onChange", "SelectedUserName(this)" } },
                            //htmlGroupAttributes: new Dictionary<string, object>() { { "class", "col-md-3 " }},
                            autoCompleteOptions: new AutoCompleteOptions()
                            {
                                AjaxOptions = new AjaxOptions()
                                {
                                    HttpMethod = "GET",
                                    Url = Url.Action(actionName: JSONController.USERAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
                                },
                                DescriptionField = "full_name",
                                IDField = "user_name",
                                Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
                                SelectedItem = ViewData[RosterController.SELECTED_FILTED_USER],

                                IsAutoComplete = true,
                                SelectItems = null
                            },
                            showLabel: false)

        <div class="col-md-4">

            @Html.AdminLTEDateRangePickerFor(
                 m => m.start_date,
                 m => m.end_date,
                 "Date Range",
                 htmlLabelAttributes: null,
                 htmlTextBoxAttributes: new Dictionary<string, object>() { { "class", "form-control" }, { "autocomplete", "off" } },
                 htmlGroupAttributes: null,// new Dictionary<string, object>() { { "class", "col-md-4" } },
                       htmlGlyphiconsAttributes: null,
                       glyphiconsName: "fa fa-calendar",
                       showLabel: false,
                       hasValidation: true,
                       showGlyphicons: true)
        </div>


        @Html.AdminLTEDropDownListFor(
                            m => m.location_id,
                            htmlLabelAttributes: null,
                            htmlDropDownAttributes: new Dictionary<string, object>() {
                                                                    { "class", "form-control select2" }
                            },
                             htmlGroupAttributes: new Dictionary<string, object>() { { "class", "col-md-3" }, { "onChange", "SelectedLocationName(this)" } },
                            autoCompleteOptions: new AutoCompleteOptions()
                            {
                                AjaxOptions = new AjaxOptions()
                                {
                                    HttpMethod = "GET",
                                    Url = Url.Action(actionName: JSONController.LOCATIONAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
                                },
                                DescriptionField = "description",
                                IDField = "location_id",
                                Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
                                SelectedItem = ViewData[ReportController.SELECTED_FILTED_LOCATION],
                                IsAutoComplete = true,
                                SelectItems = null
                            },
                            showLabel: false)

       
    </div>
    <div class="row">
        <div class="col-md-3">

            @Html.AdminLTETextBoxFor(m => m.target_amt,
                       null,
                       new Dictionary<string, object>() { { "class", "form-control" }, { "autocomplete", "off" } , { "maxlength",10 }, { "onkeypress", "return isNumberKey(event)" } },
                       null,
                       null,
                       "",
                       false,
                       true,
                       true)

        </div>



        <div class="col-md-1">
            <button type="submit" class="btn btn-primary " id="btnAdd">Add New</button>
        </div>

        @Html.HiddenFor(x => x.u_name, new { id = "u_name" })
        @Html.HiddenFor(x => x.location_name, new { id = "location_name" })
        @Html.HiddenFor(x => x.roster_id, new { id = "roster_id" })
    </div>


            <br />
            <div id="loadingMess" style="z-index: 999;position:relative; "></div>
            <div style="color:red;font-size:large">
                @ViewData[BusinessExcel.Controllers.RosterController.ROSTERCREATIONMESSAGE]
            </div>

}

<script>

    //To get selected value an text of dropdownlist
    function SelectedUserName(ddlObject)
    {
     
   
     
        var username = $(ddlObject).find('option:selected').text();
        $("#u_name").val(username);
  
    }

    function SelectedLocationName(ddlObject) {



        var username = $(ddlObject).find('option:selected').text();
        $("#location_name").val(username);

    }

    var loadingelement = '@Html.Raw(ConstantUsages.LOADING_ELEMENT)'
    function refreshRosterList() {
        $('#loadingMess').append(loadingelement);
        $.ajax({
            // edit to add steve's suggestion.
            //url: "/ControllerName/ActionName",
            url: '@Url.Action(BusinessExcel.Controllers.RosterController.TABLEROSTERUPATEVIEW, BusinessExcel.Controllers.RosterController.ROSTERCONTROLLER)',
            success: function (data) {
                // your data could be a View or Json or what ever you returned in your action method
                // parse your data here
                //alert(data);
                $('#roster-table-display').html(data)
                $('#loadingMess').find("[id='loading-element']").remove();

               // $('#roster-table-display').find("[id='loading-element']").remove();
            },
            begin: function () {
                // $('#role-table-display').modal('hide')
            }
        });
    }

    var btnValue = document.getElementById("btnAdd").textContent;
    if( @Model.roster_id>0)
    {
        document.getElementById("btnAdd").textContent="Update";
    }
   
   
    function isNumberKey(evt){
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }  
</script>  