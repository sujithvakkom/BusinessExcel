
@using BusinessExcel.Models
@using BusinessExcel.Controllers
@using BootstrapHtmlHelper
@using BusinessExcel.Providers.ProviderContext
@using BusinessExcel.Providers.ProviderContext.Entities
@using BusinessExcel.Controllers.JSON

@model ActionViewFilters

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        @BusinessExcel.Controllers.RosterController.RosterActions_TITLE
        <small>List</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> @BusinessExcel.Controllers.RosterController.ROSTERCONTROLLER</a></li>
        <li class="active">@BusinessExcel.Controllers.RosterController.RosterActions_TITLE</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Your Page Content Here -->
    @*@using (Ajax.BeginForm(RosterController.ROSTER_ACTIONS,
                                                RosterController.ROSTERCONTROLLER,
                                                new AjaxOptions()
                                                {
                                                    HttpMethod = "Get",
                                                    UpdateTargetId = "main-body",
                                                    OnBegin = "move('#page-load')",
                                                    OnComplete = "ajax_call_load_complete('#page-load')",
                                                    OnFailure = "loadin_failed"
                                                }))

    {
        <!-- Your Page Content Here -->
        <div class="box box-default collapsed-box">
            <div class="box-header with-border">
                <h3 class="box-title">Filters</h3>
                <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
                </div><!-- /.box-tools -->
            </div><!-- /.box-header -->
            <div class="box-body">
                <div class="row">
                    @Html.AntiForgeryToken()


                    <div class="col-md-3">

                        @Html.AdminLTEDropDownListFor(
                            m => m.UserName,
                            htmlLabelAttributes: null,
                            htmlDropDownAttributes: new Dictionary<string, object>() {
                                                                    { "class", "form-control select2" }
                            },
                            htmlGroupAttributes: null,
                            autoCompleteOptions: new AutoCompleteOptions()
                            {
                                AjaxOptions = new AjaxOptions()
                                {
                                    HttpMethod = "GET",
                                    Url = Url.Action(actionName: JSONController.USERAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
                                },
                                DescriptionField = "full_name",
                                IDField = "user_name",
                                Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
                                SelectedItem = ViewData[RosterController.SELECTED_FILTED_USER],
                                IsAutoComplete = true,
                                SelectItems = null
                            },
                            showLabel: true)

                    </div>


                    <div class="col-md-3">

                        @Html.AdminLTEDropDownListFor(
                            m => m.Location,
                            htmlLabelAttributes: null,
                            htmlDropDownAttributes: new Dictionary<string, object>() {
                                                                    { "class", "form-control select2" }
                            },
                            htmlGroupAttributes: null,
                            autoCompleteOptions: new AutoCompleteOptions()
                            {
                                AjaxOptions = new AjaxOptions()
                                {
                                    HttpMethod = "GET",
                                    Url = Url.Action(actionName: JSONController.LOCATIONAUTOCOMPLETER, controllerName: JSONController.JSONCONTROLLER)
                                },
                                DescriptionField = "description",
                                IDField = "location_id",
                                Formate = "'<tr><td>' + state.id + '</td><td><span>' + state.text + '</span></td></tr>'",
                                SelectedItem = ViewData[RosterController.SELECTED_FILTED_LOCATION],
                                IsAutoComplete = true,
                                SelectItems = null
                            },
                            showLabel: true)


                    </div>
                    <div class="col-md-3 col-md-offset-2">

                        @Html.AdminLTEDateRangePickerFor(
                       m => m.StartDate,
                       m => m.EndDate,
                       "Date Range",
                       htmlLabelAttributes: null,
                       htmlTextBoxAttributes: new Dictionary<string, object>() { { "class", "form-control" } },
                       htmlGroupAttributes: null,
                       htmlGlyphiconsAttributes: null,
                       glyphiconsName: "fa fa-calendar",
                       showLabel: true,
                       hasValidation: true,
                       showGlyphicons: true)
                    </div>
                </div>
            </div>            <!-- /.box-body -->
            <div class="box-footer">
                <div class="row">
                    <div class="col-lg-2">

                        <input type="submit" value="Filter" class="btn btn-primary" />
                    </div>
                   
                </div>
            </div>
        </div><!-- /.box -->
    }*@
    <div class="box box-primary">
        
        <div class="box-body">

            <div id="table-daily-upate-view" class="table-responsive">
                @{

                    using (var db = new SalesManageDataContext())
                    {
                        WebGridColumn col = new WebGridColumn()
                        {

                        };

                        int count = 0;
                        IQueryable<Roster> data = db.RosterUpateViewPaging(pageNumber: ViewBag.RosterUpateViewPage,
                                    pageSize: 6,
                                    sort: ViewBag.RosterUpateViewSort,
                                    sortdir: ViewBag.RosterUpateViewDir,
                                    count: out count, Filters: Model
                                    );

                        var grid = new WebGrid(ajaxUpdateContainerId: "table-daily-upate-view",
                                            ajaxUpdateCallback: "TableDailyUpateViewCallback", rowsPerPage: 6
                                            );
                        grid.Bind(source: data, autoSortAndPage: false, rowCount: count);
                        @grid.GetHtml(
                           tableStyle: "table table-striped table-bordered be-pagination-spl",
                           htmlAttributes: new { @id = "example" },
                          
                           columns: new[] {


                               grid.Column(columnName:"user_id",header:"User Name",format:null,style:"user-name",canSort:false),

                               grid.Column(columnName:"location_id",header:"Location",
                               format:null,
                               style:"location",canSort:false),



                               grid.Column("",
                    style: "btn",
                    format: @<text><div style="padding-left:10px;">
                            <a class="edit-roster   fa  fa-pencil-square-o" id="@item.user_id" style="font-size: 20px;" title="Edit"></a> 
                            <a class="delete-roster fa fa-trash-o" id="@item.user_id" style="font-size: 20px;"  title="Delete"></a>
                        </div>
                    </text>),



                              



    },
                           footerStyle: "extra-table-pager"
                           )

                        @grid.PagerList(mode: WebGridPagerModes.FirstLast | WebGridPagerModes.NextPrevious | WebGridPagerModes.Numeric,
                           nextText: "NEXT",
                           firstText: "FIRST",
                           previousText: "PREV.",
                           lastText: "LAST")
}
                }
            </div>
        </div>
    </div>

</section><!-- /.content -->



<script>





    $('.delete-roster').on('click', function () {
        //if (confirm("Are you sure to delete this roster?")) {

            $('#modalnew').modal('show');
            var tr = $(this).parents('tr:first');

            //var tr = $(this).parents('tr:first');
            //var PLID = tr.find("#pkiPipeline").html();
            //var PLAccumulated_Length = tr.find("#lblAccumulated_Length").val();
            //var PLElevation = tr.find("#lblElevation").val();


            var UserID = $(this).prop('id');
            $('.modal-body').html(UserID);
            //Deletes the record with ID sent below
            //$.post(
            //    '/Home/DeleteContact/',
            //    { ID: ID },
            //    function (item) {
            //        tr.remove();
            //    }, "json");

            $('#btnDeleteRoster').on('click', function (evt) {
                ///evt.stopPropagation();

                $('#modalnew').modal('hide');
                $.ajax({

                    // edit to add steve's suggestion.
                    //url: "/ControllerName/ActionName",

                    url: '@Url.Action(BusinessExcel.Controllers.RosterController.AJAXDELETEROSTER, BusinessExcel.Controllers.RosterController.ROSTERCONTROLLER)',
                    dataType: 'html',
                    data: ({
                        //insert your parameters to pass to controller
                        id: UserID
                    }),
                    success: function (data) {
                        // your data could be a View or Json or what ever you returned in your action method
                        // parse your data here
                        //alert(data);

                        if(data!=0){
                            tr.remove();
                        }
                    },
                    begin: function () {
                        // $('#role-table-display').modal('hide')
                    }
                });


            });

        //}
    });



    $('.edit-roster').on('click', function () {
        //if (confirm("Are you sure to delete this roster?")) {

        var tr = $(this).parents('tr:first');

        tr.on('click', function () {
            //Get the value from address id column. Column index starts from zero
            var uid = $(this).children("td:eq(0)").html();
            var lid = $(this).children("td:eq(1)").html();
          
            alert(uid + "-"+ lid);
        });

        var UserID = $(this).prop('id');
       
        //Deletes the record with ID sent below
        //$.post(
        //    '/Home/DeleteContact/',
        //    { ID: ID },
        //    function (item) {
        //        tr.remove();
        //    }, "json");



        $('#btnDeleteRoster').on('click', function (evt) {
            ///evt.stopPropagation();

          
            $.ajax({

                // edit to add steve's suggestion.
                //url: "/ControllerName/ActionName",

                url: '@Url.Action(BusinessExcel.Controllers.RosterController.AJAXDELETEROSTER, BusinessExcel.Controllers.RosterController.ROSTERCONTROLLER)',
                dataType: 'html',
                data: ({
                    //insert your parameters to pass to controller
                    id: UserID
                }),
                success: function (data) {
                    // your data could be a View or Json or what ever you returned in your action method
                    // parse your data here
                    //alert(data);

                    if (data != 0) {
                        tr.remove();
                    }
                },
                begin: function () {
                    // $('#role-table-display').modal('hide')
                }
            });


        });







        //}
    });
</script>
